plot(x_sin, type = 'l')
x_sin_acf <- acf(x_sin)
max(x_sin_acf$acf)
min(x_sin_acf$acf)
# smallest acf is at lag 16
x_sin_acf$lag[x_sin_acf$acf == min(x_sin_acf$acf)]
b <- x_sin > -1 & x_sin < -0.995
x_sin_min <- x_sin
x_sin_min[!b] <- 0
plot(x_sin_min, col = 'red')
lines(x_sin, type = 'l')
sum(b)
t[x_sin == min(x_sin)]
?acf
acf(x_sin, lag.max = 50)
plot(x_sin, type = 'l')
n / 0.2
n <- 20
n / 0.2
n <- 20
n / 0.2
t <- seq(0, n, 0.2)
x_sin <- sin(t)
plot(x_sin, type = 'l')
x_sin_acf <- acf(x_sin)
max(x_sin_acf$acf)
min(x_sin_acf$acf)
# smallest acf is at lag 16
x_sin_acf$lag[x_sin_acf$acf == min(x_sin_acf$acf)]
b <- x_sin > -1 & x_sin < -0.995
x_sin_min <- x_sin
x_sin_min[!b] <- 0
plot(x_sin_min, col = 'red')
lines(x_sin, type = 'l')
sum(b)
t[x_sin == min(x_sin)]
?acf
acf(x_sin, lag.max = 50)
plot(x_sin, type = 'l')
plot(t, type 'l')
plot(t, type = 'l')
acf(t)
?acf
acf(t, type = 'correlation')
acf(t, type = 'covariance')
acf(t, type = 'partial')
pacf(t)
?pacf
n <- 100
mu <- 0
wn <- rnorm(n, mu, n)
rw <- cumsum(wn)
plot(rw, type = 'l')
rw[2:]
rw[2:,]
rw[2:-1]
rw[2]
rw[2,]
rw[,]
ar_1 <- 0.9 * rw[2:length(rw)] + wn
ar_1 <- 0.9 * rw[2:length(rw)] + wn[1:(length(rw)-1)]
lines(ar_1)
n <- 100
mu <- 0
wn <- rnorm(n, mu, n)
rw <- cumsum(wn)
plot(rw, type = 'l')
ar_1 <- 0.9 * rw[2:length(rw)] + wn[1:(length(rw)-1)]
lines(ar_1, col = 'blue')
ar_1 <- 0.9 * rw[2:length(rw)] + 0.5 * rw[3:length(rw)] + wn[1:(length(rw)-2)]
ar_2 <- 0.9 * rw[2:(length(rw)-1)] + 0.5 * rw[3:length(rw)] + wn[1:(length(rw)-2)]
lines(ar_2, col = 'blue')
n <- 100
mu <- 0
wn <- rnorm(n, mu, n)
rw <- cumsum(wn)
plot(rw, type = 'l')
ar_1 <- 0.9 * rw[2:length(rw)] + wn[1:(length(rw)-1)]
lines(ar_1, col = 'blue')
ar_2 <- 0.9 * rw[2:(length(rw)-1)] + 0.5 * rw[3:length(rw)] + wn[1:(length(rw)-2)]
lines(ar_2, col = 'red')
n <- 100
mu <- 0
wn <- rnorm(n, mu, n)
rw <- cumsum(wn)
plot(rw, type = 'l')
ar_1 <- 0.9 * rw[2:length(rw)] + wn[1:(length(rw)-1)]
lines(ar_1, col = 'blue')
ar_2 <- 0.5 * rw[2:(length(rw)-1)] + 0.2 * rw[3:length(rw)] + wn[1:(length(rw)-2)]
lines(ar_2, col = 'red')
wn[1] / (1 - 0.9)
mean(ar_1)
n <- 1000
mu <- 0
wn <- rnorm(n, mu, n)
rw <- cumsum(wn)
plot(rw, type = 'l')
ar_1 <- 0.9 * rw[2:length(rw)] + wn[1:(length(rw)-1)]
lines(ar_1, col = 'blue')
wn[1] / (1 - 0.9)
mean(ar_1)
ar_2 <- 0.5 * rw[2:(length(rw)-1)] + 0.2 * rw[3:length(rw)] + wn[1:(length(rw)-2)]
lines(ar_2, col = 'red')
ar_1_stat <- ar_1 - (wn[1] / (1 - 0.9))
plot(ar_1_stat, type = 'l')
ar_1_stat <- ar_1 - mean(ar_1) # (wn[1] / (1 - 0.9))
plot(ar_1_stat, type = 'l')
plot(wn, type = 'l')
ar_1 <- 0.9 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
wn[1] / (1 - 0.9)
mean(ar_1)
1 / (1 - 0.9)
mean(ar_1)
wn[1] / (1 - 0.9)
mean(ar_1)
n <- 1000
mu <- 0
wn <- rnorm(n, mu, n)
plot(wn, type = 'l')
ar_1 <- 0.9 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
wn[1] / (1 - 0.9)
mean(ar_1)
mean(wn)
n <- 1000
mu <- 0
sd <- 1
wn <- rnorm(n, mu, sd)
plot(wn, type = 'l')
ar_1 <- 0.9 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
wn[1] / (1 - 0.9)
mean(ar_1)
mean(wn)
phi_0 <- 10
wn <- phi_0 + rnorm(n, mu, sd)
plot(wn, type = 'l')
ar_1 <- 0.9 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
lines(ar_1, col = 'blue')
ar_1 <- 0.9 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
plot(wn, type = 'l')
ar_1 <- 0.9 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
n <- 1000
mu <- 0
sd <- 1
phi_0 <- 10
wn <- phi_0 + rnorm(n, mu, sd)
plot(wn, type = 'l')
ar_1 <- 0.9 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
n <- 1000
mu <- 0
sd <- 1
phi_0 <- 10
phi_1 <- 0.9
wn <- phi_0 + rnorm(n, mu, sd)
plot(wn, type = 'l')
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
phi_0 / (1 - phi_1)
mean(ar_1)
mean(wn)
n <- 200
mu <- 10
sd <- 1
phi_1 <- 0.9
wn <- rnorm(n, mu, sd)
plot(wn, type = 'l')
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
n <- 200
mu <- 10
sd <- 1
phi_1 <- 0.9
wn <- rnorm(n, mu, sd)
plot(wn, type = 'l')
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
phi_0 / (1 - phi_1)
mu / (1 - phi_1)
mean(ar_1)
mean(wn) / (1 - phi_1)
mean(ar_1)
mean(wn)
# random walk is not stationary
rw <- cumsum(wn)
ar_1 <- 0.9 * rw[2:length(rw)] + wn[1:(length(rw)-1)]
plot(rw, type = 'l')
# random walk is not stationary
rw <- cumsum(wn)
plot(rw, type = 'l')
ar_1 <- 0.9 * rw[2:length(rw)] + wn[1:(length(rw)-1)]
lines(ar_1, col = 'blue')
n <- 200
mu <- 10
sd <- 1
phi_1 <- 0.9
wn <- rnorm(n, mu, sd)
plot(wn, type = 'l')
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
lines(rep(1,200), col= 'red')
rep(1, 200)
lines(rep(1,200), col= 'red')
?linese
?lines
n <- 200
mu <- 10
sd <- 1
phi_1 <- 0.9
wn <- rnorm(n, mu, sd)
plot(wn[2:length(wn)], type = 'l')
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
lines(rep(1,200), col= 'red')
plot(wn, type = 'l')
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(ar_1, type = 'l')
lines(ar_1, col = 'blue')
n <- 200
mu <- 10
sd <- 1
phi_1 <- 0.9
wn <- rnorm(n, mu, sd)
plot(wn, type = 'l')
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
lines(ar_1, col = 'blue')
plot(ar_1, type = 'l')
lines(wn, col = 'blue')
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(ar_1, type = 'l')
lines(wn[2:200], col = 'blue')
n <- 200
mu <- 10
sd <- 1
phi_1 <- 0.9
wn <- rnorm(n, mu, sd)
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(ar_1, type = 'l')
lines(seq(1,200,1), wn, col = 'blue')
# random walk is not stationary
rw <- cumsum(wn)
plot(rw, type = 'l')
ar_1 <- 0.9 * rw[2:length(rw)] + wn[1:(length(rw)-1)]
lines(ar_1, col = 'blue')
wn[1] / (1 - 0.9)
mean(ar_1)
ar_1_stat <- ar_1 - mean(ar_1) # (wn[1] / (1 - 0.9))
n <- 200
mu <- 10
sd <- 1
phi_1 <- 0.9
wn <- rnorm(n, mu, sd)
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(ar_1, type = 'l')
lines(ar_1, type = 'l')
lines(ar_1)
lines(ar_1, col = 'blue')
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(wn, type = 'l')
lines(ar_1, col = 'blue')
n <- 200
mu <- 10
sd <- 1
phi_1 <- 0.9
wn <- rnorm(n, mu, sd)
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(wn, type = 'l')
lines(ar_1, col = 'blue')
t <- seq(1, n, 1)
plot(t, type = 'l')
lines(t/2)
lines(t/2, col = 'blue')
n <- 200
mu <- 10
sd <- 1
phi_1 <- 0.9
wn <- rnorm(n, mu, sd)
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(wn, type = 'l')
lines(ar_1, col = 'blue')
t <- seq(1, n, 1)
plot(t[2:200], type = 'l')
lines(t/2, col = 'blue')
t <- seq(1, n, 1)
plot(t[2:100], type = 'l')
lines(t/2, col = 'blue')
mean(wn) / (1 - phi_1)
mean(ar_1)
mean(wn)
0 / (1 - phi_1)
mean(ar_1)
mean(wn)
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(wn, type = 'l')
lines(ar_1, col = 'blue')
lines(ar_1, col = 'blue')
plot(wn, type = 'l')
lines(ar_1, col = 'blue')
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(wn, type = 'l')
lines(ar_1, col = 'blue')
n <- 200
mu <- 10
sd <- 1
phi_1 <- 0.9
wn <- rnorm(n, mu, sd)
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(ar_1, type = 'l')
lines(wn, col = 'blue')
plot(ar_1, type = 'l', ylim = c(0, 25))
lines(wn, col = 'blue')
lines(ar_1, col = 'blue')
n <- 200
mu <- 10
sd <- 1
wn <- mu + rnorm(n, 0, sd)
plot(wn, type = 'l')
phi_1 <- 0.9
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(ar_1, type = 'l', ylim = c(0, 25))
lines(wn, col = 'blue')
n <- 200
mu <- 0
sd <- 1
wn <- rnorm(n, mu, sd)
plot(wn, type = 'l')
phi_1 <- 0.9
ar_1 <- phi_1 * wn[2:length(wn)] + wn[1:(length(wn)-1)]
plot(ar_1, type = 'l', ylim = c(0, 25))
lines(wn, col = 'blue')
plot(ar_1, type = 'l')
lines(wn, col = 'blue')
t <- 1:100
y_sin <- sin(t)
plot(y_sin, type = 'l')
t <- seq(0, 10, 0.2)
y_sin <- sin(t)
plot(y_sin, type = 'l')
t <- seq(0, 10, 0.2)
wn_1 <- rnorm(length(t))
t <- seq(0, 10, 0.2)
wn_1 <- rnorm(length(t))
y_sin <- sin(t) + wn_1
t <- seq(0, 10, 0.2)
wn_1 <- rnorm(length(t))
y_sin <- sin(t) + wn_1
plot(y_sin, type = 'l')
ar_sin_1 <- 0.5 * y_sin[2:length(y_sin)] + wn_1[1:(length(wn_1)-1)]
lines(ar_sin_1, col = 'blue')
t <- seq(0, 50, 0.2)
wn_1 <- rnorm(length(t))
y_sin <- sin(t) + wn_1
plot(y_sin, type = 'l')
ar_sin_1 <- 0.5 * y_sin[2:length(y_sin)] + wn_1[1:(length(wn_1)-1)]
lines(ar_sin_1, col = 'blue')
t <- seq(0, 50, 0.2)
wn_1 <- rnorm(length(t), 0, 0.25)
y_sin <- sin(t) + wn_1
plot(y_sin, type = 'l')
ar_sin_1 <- 0.5 * y_sin[2:length(y_sin)] + wn_1[1:(length(wn_1)-1)]
lines(ar_sin_1, col = 'blue')
ar_sin_1 <- 0.1 * y_sin[2:length(y_sin)] + wn_1[1:(length(wn_1)-1)]
lines(ar_sin_1, col = 'blue')
plot(y_sin, type = 'l')
ar_sin_1 <- 0.1 * y_sin[2:length(y_sin)] + wn_1[1:(length(wn_1)-1)]
lines(ar_sin_1, col = 'blue')
plot(y_sin, type = 'l')
ar_sin_1 <- 0.99 * y_sin[2:length(y_sin)] + wn_1[1:(length(wn_1)-1)]
lines(ar_sin_1, col = 'blue')
ar_sin_1 <- 0.90 * y_sin[2:length(y_sin)] + wn_1[1:(length(wn_1)-1)]
lines(ar_sin_1, col = 'blue')
acf(ar_sin_1)
acf(y_sin)
?polyroot
set.seed(1342)
z <- c(1, -1.3, 0.4)
polyroot(z)
a <- polyroot(z)
K <- rbind(c(1,1), c(1/a[1], 1/a[2]))
b <- c(1, 1.3/(1 + 0.4))
K
C <- solve(K, b)
?solve
par(mfrow = c(2, 1), mar = c(3, 2, 1, 0) + 0.5, mgp = c(1.6, 0.6, 0))
x2 <- arima.sim(list(order = c(2, 0, 0), ar = c(1.3, -0.4)), n = 500)
?plot.ts
plot.ts(x2, main = (expression(AR(2)~~~phi[1] == 1.3 ~~~phi[2] == -0.4)))
abline(h = 0, lty = 'dashed')
acf(x2)
?expression
?arima.sim
x2 <- arima.sim(list(ar = c(1.3, -0.4)), n = 500)
plot.ts(x2, main = (expression(AR(2)~~~phi[1] == 1.3 ~~~phi[2] == -0.4)))
abline(h = 0, lty = 'dashed')
acf(x2)
x2 <- arima.sim(list(order = c(2, 0, 0), ar = c(1.3, -0.4)), n = 500)
plot.ts(x2, main = (expression(AR(2)~~~phi[1] == 1.3 ~~~phi[2] == -0.4)))
abline(h = 0, lty = 'dashed')
set.seed(1342)
z <- c(1, -1.3, 0.4)
a <- polyroot(z)
# first row rho(0) = 1 = C1 + C2
# second row rho(1) = C1 * (1/z1) + C2 * (1/z2)
# solving for C1 and C2 when the solution is 1 and phi_1 / (1 - phi_2)
K <- rbind(c(1,1), c(1/a[1], 1/a[2]))
b <- c(1, 1.3/(1 + 0.4))
C <- solve(K, b)
par(mfrow = c(2, 1), mar = c(3, 2, 1, 0) + 0.5, mgp = c(1.6, 0.6, 0))
x2 <- arima.sim(list(order = c(2, 0, 0), ar = c(1.3, -0.4)), n = 500)
plot.ts(x2, main = (expression(AR(2)~~~phi[1] == 1.3 ~~~phi[2] == -0.4)))
x2 <- arima.sim(list(ar = c(1.3, -0.4)), n = 500)
plot.ts(x2, main = (expression(AR(2)~~~phi[1] == 1.3 ~~~phi[2] == -0.4)))
abline(h = 0, lty = 'dashed')
acf(x2)
par(mfrow = c(2, 1), mar = c(3, 2, 1, 0) + 0.5, mgp = c(1.6, 0.6, 0))
x2 <- arima.sim(list(order = c(2, 0, 0), ar = c(1.3, -0.4)), n = 500)
plot.ts(x2, main = (expression(AR(2)~~~phi[1] == 1.3 ~~~phi[2] == -0.4)))
abline(h = 0, lty = 'dashed')
acf(x2)
?arima.sim
x3 <- arima.sim(list(ar = c(1.3, -0.4)), n = 500)
x4 <- arima.sim(list(ar = c(1.3, -0.4)), n = 500)
z2 <- c(1, -0.3, -0.04)
X <- c(1, -0.3, -0.04)
z2 <- solve(X)
z2 <- polyroot(X)
phi1 <- 0.3
phi2 <- 0.04
X <- c(1, -phi1, -phi2)
z2 <- polyroot(X)
b2 <- c(1, phi1 / (1 - phi2))
K2 <- rbind(c(1, 1), c(1/z2[1], 1/z2[2]))
b2 <- c(1, phi1 / (1 - phi2))
C <- solve(K2, b2)
x3 <- arima.sim(list(ar = c(phi1, phi2)), n = 500)
plot.ts(x3)
acf(x3)
x3_acf <- acf(x3)
x3_acf <- x3_acf$acf
tau <- 1:25
rho <- 0.175 * -0.1 ** tau + 0.825 * 0.4 ** tau
plot(x3_acf)
plot(x3_acf)
plot(rho)
par(mfrow = c(2, 1))
plot(x3_acf)
plot(rho)
plot(x3_acf)
lines(rho)
lines(rho, type = 'd')
?lines
plot(x3_acf)
lines(rho, type = 'p')
tau <- 0:25
rho <- 0.175 * -0.1 ** tau + 0.825 * 0.4 ** tau
plot(x3_acf)
lines(rho, type = 'p')
lines(rho, type = 'p', col = 'red')
tau <- 0:25
rho <- 0.175 * (-0.1 ** tau) + 0.825 * (0.4 ** tau)
plot(x3_acf)
lines(rho, type = 'p', col = 'red')
tau <- 0:25
rho <- 0.175 * (-0.1 ** tau) + 0.825 * (0.4 ** tau)
0.175 * (-0.1 ** 0) + 0.825 * (0.4 ** 0)
(-0.1 ** 0)
rho <- 0.175 * ((-0.1) ** tau) + 0.825 * (0.4 ** tau)
plot(x3_acf)
lines(rho, type = 'p', col = 'red')
?lines
x3_acf <- acf(x3)
x3_acf <- x3_acf$acf
tau <- 0:25
rho <- 0.175 * ((-0.1) ** tau) + 0.825 * (0.4 ** tau)
plot(x3_acf)
lines(rho, type = 'p', col = 'red')
rho <- 0.175 * ((-0.1) ** tau) + 0.825 * ((0.4) ** tau)
plot(x3_acf)
lines(rho, type = 'p', col = 'red')
?plot
plot(x3_acf, lwd = 2)
lines(rho, type = 'p', col = 'red')
plot(x3_acf, pch = 2)
lines(rho, type = 'p', col = 'red')
plot(x3_acf, pch = 'x')
lines(rho, type = 'p', col = 'red')
?acf
x3_acf <- acf(x3, type = 'correlation')
x3_acf <- x3_acf$acf
tau <- 0:25
rho <- 0.175 * ((-0.1) ** tau) + 0.825 * ((0.4) ** tau)
plot(x3_acf, pch = 'x')
lines(rho, type = 'p', col = 'red')
?acf
matrix(c(2, 3, 4, 5, 6, 7, 1, 2, 3), nrow = 3, ncol = 3)
A <- matrix(c(2, 3, 4, 5, 6, 7, 1, 2, 3), nrow = 3, ncol = 3)
B <- matrix(c(1, 3, 2, 5, 9, 7, 4, 1, 1), nrow = 3, ncol = 3)
A %*% B
B %*% A
A <- matrix(c(1, 0.147, 0.094, 0.147, 1, 0.174, 0.094, 0.147, 1), nrow = 3, ncol = 3)
A <- matrix(c(1, 0.147, 0.094, 0.147, 1, 0.174, 0.094, 0.147, 1), nrow = 3, ncol = 3) ; A
A_inv <- solve(A)
A_inv <- solve(A) ; A_inv
rho_est <- matrix(c(0.147, 0.094, 0.384)) ; rho_est
A_inv %*% rho_est
source("C:/Users/pat_h/OneDrive/public-repos/R-Resources/Time Series/AR Characteristic Polynomial.R")
